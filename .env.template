### API Keys ###
OPENAI_API_KEY=
DEEPGRAM_PROJECT_ID=
DEEPGRAM_API_KEY=
ANTHROPIC_API_KEY=
MOONSHOT_API_KEY=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_ACCESS_KEY_ID_DYNAMODB=
AWS_SECRET_ACCESS_KEY_DYNAMODB=
PINECONE_API_KEY=

### Domain and server names ###
DOMAIN=localhost
ADMIN_DEV_NAME=ai4edu-api-server
USER_DEV_NAME=ai4edu-api-server
ADMIN_PROD_NAME=ai4edu-api-server
USER_PROD_NAME=ai4edu-api-server
# The following names are for online deployment, for local deployment, you should keep the above names
# ADMIN_DEV_NAME=ai4edu-admin-dev-server
# USER_DEV_NAME=ai4edu-user-dev-server
# ADMIN_PROD_NAME=ai4edu-admin-prod-server
# USER_PROD_NAME=ai4edu-user-prod-server

### Redis and Postgres database ###
REDIS_ADDRESS=redis-local-server
POSTGRES_DB=ai4edu_local
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_ENDPOINT=db
DB_URI=postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_ENDPOINT}:5432/${POSTGRES_DB}
PGPASS="${POSTGRES_ENDPOINT}:*:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}"
# If you want to use your out-of-docker database, you can update the endpoint to be 'host.docker.internal'
PGADMIN_DEFAULT_EMAIL=ai4edu@ai4edu.io
PGADMIN_DEFAULT_PASSWORD=password
PGADMIN_CONFIG_SERVER_MODE=False
PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False

### JWT keys ###
# Don't forget to generate the keys with the following command
# mkdir -p jwt_keys && openssl genrsa 2048 > jwt_keys/privateKey.pem && openssl rsa -in jwt_keys/privateKey.pem -pubout > jwt_keys/publicKey.pem
# Then copy the content of the files to the following variables (copy everything in the file into the double quotes)
JWT_PRIVATE_KEY=""
JWT_PUBLIC_KEY=""