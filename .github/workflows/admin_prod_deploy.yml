name: admin_prod_build_deploy
on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - 'user/**' # ignore all user side code updates
      - 'nginx_conf/**'
      - 'docker_compose_cloud/**'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/ai4edu-admin:prod # change to prod if in production
  SEC_FILE_NAME: edcwsxqaz
  CONTAINER_NAME: ai4edu-admin-prod-server
jobs:
  publish:
    name: publish image admin prod
    runs-on: ubuntu-latest
    steps:
      - id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_NAME }}
      - id: updateenv
        run: echo "IMAGE_NAME=${{ steps.string.outputs.lowercase }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Login to ghcr
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build and Publish
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  deploy:
    needs: publish
    name: deploy image admin prod
    runs-on: ubuntu-latest
    permissions:
      checks: read
    steps:
      - name: Wait for user prod to deploy
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.ref }}
          check-name: 'deploy image user prod'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 5
      - name: install ssh keys
        if: ${{ !cancelled() }}
        # check this thread to understand why its needed:
        # <https://stackoverflow.com/a/70447517>
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && touch ${{ env.SEC_FILE_NAME }} && echo '${{ secrets.PROD_SECRETS }}' | base64 -d > ${{ env.SEC_FILE_NAME }} && exit"
      - name: connect and pull
        if: ${{ !cancelled() }}
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin && cd ${{ secrets.WORK_DIR }} && docker stop ${{ env.CONTAINER_NAME }} || true | xargs docker rm || true && docker compose pull ${{ env.CONTAINER_NAME }} && docker compose up -d ${{ env.CONTAINER_NAME }} && exit"
      - name: clean env
        if: ${{ !cancelled() }}
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && rm -f ${{ env.SEC_FILE_NAME }} && exit"
      - name: get time
        if: ${{ !cancelled() }}
        run: echo "TIME=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV
      - name: cleanup
        if: ${{ !cancelled() }}
        run: rm -rf ~/.ssh
